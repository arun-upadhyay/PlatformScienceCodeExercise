<?php

use PlatformScience\SuitableScoreCalculator;

require_once('vendor/autoload.php');

/**
 * Unit test cases to test SuitableScoreCalculator functionality
 */
class SuitableScoreCalculatorTest extends \PHPUnit\Framework\TestCase
{
    private $suitableScoreCalculator;

    function setUp()
    {
        $this->suitableScoreCalculator = new SuitableScoreCalculator();
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testForBaseSSValue()
    {
        $this->suitableScoreCalculator = new SuitableScoreCalculator("105 Garden Dr 03102", "arun");
        $this->suitableScoreCalculator->calculateBaseSS();
        $this->assertEquals($this->suitableScoreCalculator->getBaseSS(), '2');
        $this->suitableScoreCalculator = new SuitableScoreCalculator("105 Garden Dr 0310", "arun o");
        $this->suitableScoreCalculator->calculateBaseSS();
        $this->assertEquals($this->suitableScoreCalculator->getBaseSS(), '4.5');
    }

    public function testFinalBaseSSValue()
    {
        $this->suitableScoreCalculator = new SuitableScoreCalculator("105 Garden Dr 0310", "arun o");
        $this->suitableScoreCalculator->calculateBaseSS();
        $this->assertEquals($this->suitableScoreCalculator->getBaseSS(), '4.5');
        $this->suitableScoreCalculator = new SuitableScoreCalculator("105 Garden Dr 0310", "arun o");
        $this->suitableScoreCalculator->calculateFinalSS();
        $this->assertEquals($this->suitableScoreCalculator->getFinalSS(), '6.75');
    }

    public function testFindFactorsOfNumber()
    {
        $this->assertEquals($this->suitableScoreCalculator->findFactorsExceptOne(15), "3,5,15");
        $this->assertEquals($this->suitableScoreCalculator->findFactorsExceptOne(20), "2,4,5,10,20");
    }

    public function testFindVowelsConstants()
    {
        $this->assertEquals(['vowelsCount' => 2, 'consonantsCount' => 4], $this->suitableScoreCalculator->findVowelsConsonants("vo wels"));
        $this->assertEquals(['vowelsCount' => 3, 'consonantsCount' => 10], $this->suitableScoreCalculator->findVowelsConsonants("Jarrellfort, NJ 02229-7540"));
    }
}